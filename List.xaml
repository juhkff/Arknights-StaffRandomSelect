<Page
    x:Class="StaffRandomSelect.List"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Domain="clr-namespace:StaffRandomSelect.Domain"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:StaffRandomSelect"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="List"
    d:DataContext="{d:DesignInstance Domain:ListModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{materialDesign:MaterialDesignFont}"
    TextElement.FontSize="14"
    TextElement.FontWeight="Medium"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    mc:Ignorable="d">

    <DataGrid
        AutoGenerateColumns="False"
        CanUserAddRows="False"
        ItemsSource="{Binding StaffList}">
        <!--<DataGrid.DataContext>
            <Domain:ListModel />
        </DataGrid.DataContext>-->
        <!--<DataGrid.Resources>
            <domain:BindingProxy
                xmlns:domain="clr-namespace:MaterialDesignDemo.Domain"
                x:Key="DataContextProxy"
                Data="{Binding}" />
        </DataGrid.Resources>-->
        <DataGrid.Resources>
            <Domain:ListContext x:Key="ListContextProxy" Context="{Binding}" />
        </DataGrid.Resources>

        <DataGrid.Columns>
            <DataGridCheckBoxColumn
                Width="*"
                Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}"
                EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}">
                <DataGridCheckBoxColumn.Header>
                    <Border Background="Transparent">
                        <CheckBox IsChecked="{Binding Context.IsAllStaffSelected, Source={StaticResource ListContextProxy}}" />
                    </Border>
                </DataGridCheckBoxColumn.Header>
                <DataGridCheckBoxColumn.HeaderStyle>
                    <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                    </Style>
                </DataGridCheckBoxColumn.HeaderStyle>
            </DataGridCheckBoxColumn>
            <DataGridTextColumn
                Width="*"
                Binding="{Binding Name}"
                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                Header="名称">
                <DataGridTextColumn.HeaderStyle>
                    <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock
                                        FontFamily="Microsoft YaHei"
                                        FontWeight="Bold"
                                        Foreground="Orange"
                                        Text="{Binding}"
                                        TextAlignment="Center"
                                        TextWrapping="Wrap" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGridTextColumn.HeaderStyle>
                <DataGridTextColumn.ElementStyle>
                    <Style BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}" TargetType="{x:Type TextBlock}">
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="TextAlignment" Value="Center" />
                        <Setter Property="FontFamily" Value="Microsoft YaHei" />
                    </Style>
                </DataGridTextColumn.ElementStyle>
            </DataGridTextColumn>
            <!--  if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn  -->
            <materialDesign:DataGridTextColumn
                Width="*"
                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                Header="稀有度">
                <DataGridTextColumn.HeaderStyle>
                    <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock
                                        FontFamily="Microsoft YaHei"
                                        FontWeight="Bold"
                                        Foreground="Orange"
                                        Text="{Binding}"
                                        TextAlignment="Center"
                                        TextWrapping="Wrap" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGridTextColumn.HeaderStyle>
                <DataGridTextColumn.ElementStyle>
                    <Style BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}" TargetType="{x:Type TextBlock}">
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="TextAlignment" Value="Center" />
                        <Setter Property="FontFamily" Value="Microsoft YaHei" />
                    </Style>
                </DataGridTextColumn.ElementStyle>
                <materialDesign:DataGridTextColumn.Binding>
                    <Binding Path="Star">
                        <!--<Binding.ValidationRules>
                            <domain:NotEmptyValidationRule xmlns:domain="clr-namespace:MaterialDesignDemo.Domain" />
                        </Binding.ValidationRules>-->
                    </Binding>
                </materialDesign:DataGridTextColumn.Binding>
            </materialDesign:DataGridTextColumn>
            <!--  set a max length to get an indicator in the editor  -->
            <DataGridTextColumn
                Width="*"
                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                Header="职业">
                <DataGridTextColumn.HeaderStyle>
                    <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock
                                        FontFamily="Microsoft YaHei"
                                        FontWeight="Bold"
                                        Foreground="Orange"
                                        Text="{Binding}"
                                        TextAlignment="Center"
                                        TextWrapping="Wrap" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGridTextColumn.HeaderStyle>
                <DataGridTextColumn.ElementStyle>
                    <Style BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}" TargetType="{x:Type TextBlock}">
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="TextAlignment" Value="Center" />
                        <Setter Property="FontFamily" Value="Microsoft YaHei" />
                    </Style>
                </DataGridTextColumn.ElementStyle>
                <DataGridTextColumn.Binding>
                    <Binding Path="Career">
                        <!--<Binding.ValidationRules>
                            <domain:NotEmptyValidationRule xmlns:domain="clr-namespace:MaterialDesignDemo.Domain" />
                        </Binding.ValidationRules>-->
                    </Binding>
                </DataGridTextColumn.Binding>
            </DataGridTextColumn>
            <!--<materialDesign:DataGridTextColumn
                Width="120"
                Binding="{Binding Numeric}"
                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                Header="Number with long header">
                <DataGridTextColumn.HeaderStyle>
                    <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="HorizontalContentAlignment" Value="Right" />
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock
                                        Text="{Binding}"
                                        TextAlignment="Right"
                                        TextWrapping="Wrap" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGridTextColumn.HeaderStyle>
                <DataGridTextColumn.ElementStyle>
                    <Style BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}" TargetType="{x:Type TextBlock}">
                        <Setter Property="HorizontalAlignment" Value="Right" />
                    </Style>
                </DataGridTextColumn.ElementStyle>
            </materialDesign:DataGridTextColumn>
            -->
            <!--  use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo  -->
            <!--
            <materialDesign:DataGridComboBoxColumn
                Width="100"
                Header="Food with long header"
                IsEditable="True"
                ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Foods}"
                SelectedValueBinding="{Binding Food}">
            -->
            <!--Setting the editing element style allows access to all of the combo box's properties
                      <materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                          <Style TargetType="ComboBox" BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type ComboBox}, ResourceId=MaterialDataGridComboBoxColumnEditingStyle}}" >
                              <Setter Property="IsEditable" Value="True" />
                          </Style>
                      </materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
            -->
            <!--
            </materialDesign:DataGridComboBoxColumn>-->
        </DataGrid.Columns>
    </DataGrid>

    <!--<ListView ItemsSource="{Binding Items1}">
        <ListView.View>
            <GridView>
                <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="名称">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock HorizontalAlignment="Center" TextAlignment="Center" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn DisplayMemberBinding="{Binding Star}" Header="稀有度">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock HorizontalAlignment="Center" TextAlignment="Center" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn DisplayMemberBinding="{Binding Career}" Header="职业">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock HorizontalAlignment="Center" TextAlignment="Center" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
            </GridView>
        </ListView.View>
        <ListView.DataContext>
            <Domain:ListModel />
        </ListView.DataContext>
    </ListView>-->

</Page>
